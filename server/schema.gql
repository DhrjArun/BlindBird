# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Chat {
  createAt: DateTime!
  firstPerson: User
  id: Float!
  name: String!
  revealGender: Boolean!
  secondPerson: User!
}

enum CursorType {
  AFTER
  BEFORE
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Message {
  body: String!
  chatId: Float
  createdAt: DateTime!
  id: Float!
  isSeen: Boolean!
  sender: Sender!
}

type Mutation {
  createChat(name: String!, revealGender: Boolean!, secondPersonTId: String!): Chat!
  createMessage(body: String!, chatId: Float!): Message!
  logout: Boolean!
  makeSeen(messageId: Float!): Boolean!
}

type PublicMetrics {
  followersCount: Int!
  followingCount: Int!
  listedCount: Int!
  tweetCount: Int!
}

type Query {
  chats: [Chat!]!
  hello: String!
  me: User!
  messages(chatId: Float!, cursor: Float, cursorType: CursorType, limit: Float): [Message!]!
  user(tUsername: String!): User
}

enum Sender {
  FIRST_PERSON
  SECOND_PERSON
}

type Subscription {
  newMessage: Message!
}

type User {
  createAt: DateTime
  isRegistered: Boolean
  publicMetrics: PublicMetrics
  tId: String!
  tName: String!
  tPfp: String
  tUsername: String!
}
